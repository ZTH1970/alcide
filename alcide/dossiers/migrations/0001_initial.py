# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import alcide.models
import django.db.models.deletion
from django.conf import settings
import django.core.validators


class Migration(migrations.Migration):

    dependencies = [
        ('ressources', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('personnes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FileState',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Cr\xe9ation')),
                ('date_selected', models.DateTimeField()),
                ('comment', models.TextField(max_length=3000, null=True, blank=True)),
                ('author', models.ForeignKey(verbose_name='Auteur', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Etat du dossier patient',
                'verbose_name_plural': 'Etats du dossier patient',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HealthCare',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('start_date', models.DateField(verbose_name='Date de d\xe9but')),
                ('request_date', models.DateField(null=True, verbose_name='Date de demande', blank=True)),
                ('agree_date', models.DateField(null=True, verbose_name="Date d'accord", blank=True)),
                ('insist_date', models.DateField(null=True, verbose_name='Date de relance', blank=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Cr\xe9ation')),
                ('comment', models.TextField(max_length=3000, null=True, verbose_name='Commentaire', blank=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CmppHealthCareTreatment',
            fields=[
                ('healthcare_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='dossiers.HealthCare')),
                ('act_number', models.IntegerField(default=30, verbose_name="Nombre d'actes couverts")),
                ('end_date', models.DateField(null=True, verbose_name='Date de fin', blank=True)),
                ('prolongation', models.IntegerField(default=0, verbose_name='Prolongation')),
                ('prolongation_date', models.DateField(null=True, verbose_name='Date de prolongation', blank=True)),
            ],
            options={
            },
            bases=('dossiers.healthcare',),
        ),
        migrations.CreateModel(
            name='CmppHealthCareDiagnostic',
            fields=[
                ('healthcare_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='dossiers.HealthCare')),
                ('act_number', models.IntegerField(default=6, verbose_name="Nombre d'actes couverts")),
                ('end_date', models.DateField(null=True, verbose_name='Date de fin', blank=True)),
            ],
            options={
            },
            bases=('dossiers.healthcare',),
        ),
        migrations.CreateModel(
            name='PatientAddress',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('display_name', models.CharField(verbose_name='Adresse compl\xe8te', max_length=276, editable=False)),
                ('phone', alcide.models.PhoneNumberField(max_length=20, null=True, verbose_name='T\xe9l\xe9phone', blank=True)),
                ('fax', alcide.models.PhoneNumberField(max_length=20, null=True, verbose_name='Fax', blank=True)),
                ('place_of_life', models.BooleanField(default=True, verbose_name='Lieu de vie')),
                ('number', models.CharField(max_length=12, null=True, verbose_name='Num\xe9ro', blank=True)),
                ('recipient', models.CharField(max_length=100, null=True, verbose_name='Destinataire', blank=True)),
                ('street', models.CharField(max_length=100, null=True, verbose_name='Rue', blank=True)),
                ('address_complement', models.CharField(max_length=100, null=True, verbose_name="Compl\xe9ment d'adresse", blank=True)),
                ('zip_code', alcide.models.ZipCodeField(max_length=5, null=True, verbose_name='Code postal', blank=True)),
                ('city', models.CharField(max_length=60, null=True, verbose_name='Ville', blank=True)),
                ('comment', models.TextField(null=True, verbose_name='Commentaire', blank=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PatientContact',
            fields=[
                ('people_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='personnes.People')),
                ('mobile', alcide.models.PhoneNumberField(max_length=20, null=True, verbose_name='T\xe9l\xe9phone mobile', blank=True)),
                ('social_security_id', models.CharField(max_length=13, null=True, verbose_name='NIR', blank=True)),
                ('birthdate', models.DateField(null=True, verbose_name='Date de naissance', blank=True)),
                ('birthplace', models.CharField(max_length=100, null=True, verbose_name='Lieu de naissance', blank=True)),
                ('twinning_rank', models.IntegerField(default=1, verbose_name='Rang (g\xe9mellit\xe9)', validators=[django.core.validators.MinValueValidator(1)])),
                ('thirdparty_payer', models.BooleanField(default=False, verbose_name='Tiers-payant')),
                ('begin_rights', models.DateField(null=True, verbose_name='D\xe9but de droits', blank=True)),
                ('end_rights', models.DateField(null=True, verbose_name='Fin de droits', blank=True)),
                ('other_health_center', models.CharField(max_length=4, null=True, verbose_name='Centre sp\xe9cifique', blank=True)),
                ('type_of_contract', models.CharField(blank=True, max_length=2, null=True, verbose_name='Type de contrat sp\xe9cifique', choices=[(b'89', b'CMU - Couverture maladie universelle'), (b'04', b"AME - Aide m\xc3\xa9dicale d'\xc3\x89tat")])),
                ('ame', models.BooleanField(default=False, verbose_name='AME')),
                ('contact_comment', models.TextField(null=True, verbose_name='Commentaire', blank=True)),
                ('old_contact_id', models.CharField(max_length=256, null=True, verbose_name='Ancien ID du contact', blank=True)),
            ],
            options={
                'verbose_name': 'Contact patient',
                'verbose_name_plural': 'Contacts patient',
            },
            bases=('personnes.people',),
        ),
        migrations.CreateModel(
            name='PatientRecord',
            fields=[
                ('patientcontact_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='dossiers.PatientContact')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='cr\xe9ation')),
                ('nationality', models.CharField(max_length=70, null=True, verbose_name='Nationalit\xe9', blank=True)),
                ('paper_id', models.CharField(max_length=6, null=True, verbose_name='N\xb0 dossier papier', blank=True)),
                ('comment', models.TextField(default=None, null=True, verbose_name='Commentaire', blank=True)),
                ('pause', models.BooleanField(default=False, verbose_name='Pause facturation')),
                ('pause_comment', models.TextField(default=None, null=True, verbose_name='Commentaire sur la pause facturation', blank=True)),
                ('confidential', models.BooleanField(default=False, verbose_name='Confidentiel')),
                ('addresses_contacts_comment', models.TextField(default=None, null=True, verbose_name='Commentaire sur les adresses et contacts', blank=True)),
                ('size', models.DecimalField(decimal_places=1, default=None, max_digits=5, blank=True, null=True, verbose_name='Taille (cm)')),
                ('weight', models.IntegerField(default=None, null=True, verbose_name='Poids (g)', blank=True)),
                ('pregnancy_term', models.IntegerField(default=None, null=True, verbose_name='Terme en semaines', blank=True)),
                ('cranium_perimeter', models.DecimalField(decimal_places=2, default=None, max_digits=5, blank=True, null=True, verbose_name='P\xe9rim\xe8tre cranien')),
                ('chest_perimeter', models.DecimalField(decimal_places=2, default=None, max_digits=5, blank=True, null=True, verbose_name='P\xe9rim\xe8tre thoracique')),
                ('apgar_score_one', models.IntegerField(default=None, null=True, verbose_name="Test d'Apgar (1)", blank=True)),
                ('apgar_score_two', models.IntegerField(default=None, null=True, verbose_name="Test d'Apgar (5)", blank=True)),
                ('deficiency_intellectual', models.IntegerField(default=0, max_length=1, verbose_name='D\xe9ficiences intellectuelles', choices=[(0, b'Non'), (1, b'A titre principal'), (2, b'A titre associ\xc3\xa9')])),
                ('deficiency_autism_and_other_ted', models.IntegerField(default=0, max_length=1, verbose_name='Autisme et autres TED', choices=[(0, b'Non'), (1, b'A titre principal'), (2, b'A titre associ\xc3\xa9')])),
                ('deficiency_mental_disorder', models.IntegerField(default=0, max_length=1, verbose_name='Troubles psychiques', choices=[(0, b'Non'), (1, b'A titre principal'), (2, b'A titre associ\xc3\xa9')])),
                ('deficiency_learning_disorder', models.IntegerField(default=0, max_length=1, verbose_name='Troubles du langage et des apprentissages', choices=[(0, b'Non'), (1, b'A titre principal'), (2, b'A titre associ\xc3\xa9')])),
                ('deficiency_auditory', models.IntegerField(default=0, max_length=1, verbose_name='D\xe9ficiences auditives', choices=[(0, b'Non'), (1, b'A titre principal'), (2, b'A titre associ\xc3\xa9')])),
                ('deficiency_visual', models.IntegerField(default=0, max_length=1, verbose_name='D\xe9ficiences visuelles', choices=[(0, b'Non'), (1, b'A titre principal'), (2, b'A titre associ\xc3\xa9')])),
                ('deficiency_motor', models.IntegerField(default=0, max_length=1, verbose_name='D\xe9ficiences motrices', choices=[(0, b'Non'), (1, b'A titre principal'), (2, b'A titre associ\xc3\xa9')])),
                ('deficiency_metabolic_disorder', models.IntegerField(default=0, max_length=1, verbose_name='D\xe9ficiences m\xe9taboliques', choices=[(0, b'Non'), (1, b'A titre principal'), (2, b'A titre associ\xc3\xa9')])),
                ('deficiency_brain_damage', models.IntegerField(default=0, max_length=1, verbose_name='C\xe9r\xe9bro-l\xe9sions', choices=[(0, b'Non'), (1, b'A titre principal'), (2, b'A titre associ\xc3\xa9')])),
                ('deficiency_polyhandicap', models.BooleanField(default=False, verbose_name='Polyhandicap')),
                ('deficiency_behavioral_disorder', models.IntegerField(default=0, max_length=1, verbose_name='Troubles de la conduite et du comportement', choices=[(0, b'Non'), (1, b'A titre principal'), (2, b'A titre associ\xc3\xa9')])),
                ('deficiency_in_diagnostic', models.BooleanField(default=False, verbose_name='En diagnostic')),
                ('deficiency_other_disorder', models.IntegerField(default=0, max_length=1, verbose_name='Autres types de d\xe9ficience', choices=[(0, b'Non'), (1, b'A titre principal'), (2, b'A titre associ\xc3\xa9')])),
                ('sibship_place', models.IntegerField(default=None, null=True, verbose_name='Place dans la fratrie', blank=True)),
                ('nb_children_family', models.IntegerField(default=None, null=True, verbose_name="Nombre d'enfants dans la fratrie", blank=True)),
                ('family_comment', models.TextField(default=None, null=True, verbose_name='Commentaire', blank=True)),
                ('simple_appointment_transport', models.BooleanField(default=False, verbose_name='Afficher par d\xe9faut le transport sur les rendez-vous simples')),
                ('periodic_appointment_transport', models.BooleanField(default=False, verbose_name='Afficher par d\xe9faut le transport sur les rendez-vous r\xe9guliers')),
                ('old_id', models.CharField(max_length=256, null=True, verbose_name='Ancien ID', blank=True)),
                ('old_old_id', models.CharField(max_length=256, null=True, verbose_name='Ancien ancien ID', blank=True)),
                ('advicegiver', models.ForeignKey(default=None, blank=True, to='ressources.AdviceGiver', null=True, verbose_name='Demandeur')),
                ('analysemotive', models.ForeignKey(default=None, blank=True, to='ressources.AnalyseMotive', null=True, verbose_name='Motif (analys\xe9)')),
                ('child_custody', models.ForeignKey(default=None, blank=True, to='ressources.ParentalCustodyType', null=True, verbose_name='Garde parentale')),
                ('contacts', models.ManyToManyField(related_name='contact_of', to='dossiers.PatientContact')),
                ('coordinators', models.ManyToManyField(default=None, to='personnes.Worker', null=True, verbose_name='Coordinateurs', blank=True)),
                ('creator', models.ForeignKey(verbose_name='Cr\xe9ateur dossier patient', to=settings.AUTH_USER_MODEL)),
                ('externaldoctor', models.ForeignKey(default=None, blank=True, to='personnes.ExternalTherapist', null=True, verbose_name='M\xe9decin ext\xe9rieur')),
                ('externalintervener', models.ForeignKey(default=None, blank=True, to='personnes.ExternalWorker', null=True, verbose_name='Intervenant ext\xe9rieur')),
                ('family_situation', models.ForeignKey(default=None, blank=True, to='ressources.FamilySituationType', null=True, verbose_name='Situation familiale')),
                ('familymotive', models.ForeignKey(default=None, blank=True, to='ressources.FamilyMotive', null=True, verbose_name='Motif (famille)')),
                ('job_father', models.ForeignKey(related_name='job_father', default=None, blank=True, to='ressources.Job', null=True, verbose_name='Profession du p\xe8re')),
                ('job_mother', models.ForeignKey(related_name='job_mother', default=None, blank=True, to='ressources.Job', null=True, verbose_name='Profession de la m\xe8re')),
                ('last_state', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to='dossiers.FileState', null=True)),
                ('mdph_requests', models.ManyToManyField(related_name='mdph_requests_of', to='ressources.MDPHRequest')),
                ('mdph_responses', models.ManyToManyField(related_name='mdph_responses_of', to='ressources.MDPHResponse')),
                ('mises_1', models.ManyToManyField(related_name='mises1', default=None, to='ressources.CodeCFTMEA', blank=True, null=True, verbose_name='Axe I : cat\xe9gories cliniques')),
                ('mises_2', models.ManyToManyField(related_name='mises2', default=None, to='ressources.CodeCFTMEA', blank=True, null=True, verbose_name='Axe II : facteurs organiques')),
                ('mises_3', models.ManyToManyField(related_name='mises3', default=None, to='ressources.CodeCFTMEA', blank=True, null=True, verbose_name='Axe II : facteurs environnementaux')),
                ('outmotive', models.ForeignKey(default=None, blank=True, to='ressources.OutMotive', null=True, verbose_name='Motif de sortie')),
                ('outto', models.ForeignKey(default=None, blank=True, to='ressources.OutTo', null=True, verbose_name='Orientation')),
                ('parental_authority', models.ForeignKey(default=None, blank=True, to='ressources.ParentalAuthorityType', null=True, verbose_name='Autorit\xe9 parentale')),
                ('policyholder', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, verbose_name=b'Assur\xc3\xa9', blank=True, to='dossiers.PatientContact', null=True)),
                ('provenance', models.ForeignKey(default=None, blank=True, to='ressources.Provenance', null=True, verbose_name='Conseilleur')),
                ('provenanceplace', models.ForeignKey(default=None, blank=True, to='ressources.ProvenancePlace', null=True, verbose_name='Lieu de provenance')),
                ('rm_father', models.ForeignKey(related_name='rm_father', default=None, blank=True, to='ressources.MaritalStatusType', null=True, verbose_name='R\xe9gime matrimonial du p\xe8re')),
                ('rm_mother', models.ForeignKey(related_name='rm_mother', default=None, blank=True, to='ressources.MaritalStatusType', null=True, verbose_name='R\xe9gime matrimonial de la m\xe8re')),
                ('service', models.ForeignKey(blank=True, to='ressources.Service', null=True)),
                ('socialisation_durations', models.ManyToManyField(related_name='socialisation_duration_of', to='ressources.SocialisationDuration')),
                ('transportcompany', models.ForeignKey(default=None, blank=True, to='ressources.TransportCompany', null=True, verbose_name='Compagnie de transport')),
                ('transporttype', models.ForeignKey(default=None, blank=True, to='ressources.TransportType', null=True, verbose_name='Type de transport')),
            ],
            options={
                'verbose_name': 'Dossier',
                'verbose_name_plural': 'Dossiers',
            },
            bases=('dossiers.patientcontact', models.Model),
        ),
        migrations.CreateModel(
            name='ProtectionState',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Cr\xe9ation')),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(null=True, blank=True)),
                ('comment', models.TextField(max_length=3000, null=True, blank=True)),
                ('patient', models.ForeignKey(verbose_name='Dossier patient', to='dossiers.PatientRecord')),
            ],
            options={
                'ordering': ['-start_date'],
                'verbose_name': 'Mesure de protection du dossier patient',
                'verbose_name_plural': 'Mesure de protections du dossier patient',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProtectionStatus',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=150, verbose_name='Nom')),
            ],
            options={
                'verbose_name': "Statut d'une mesure de protection",
                'verbose_name_plural': "Statuts d'une mesure de protection",
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SessadHealthCareNotification',
            fields=[
                ('healthcare_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='dossiers.HealthCare')),
                ('end_date', models.DateField(null=True, verbose_name='Date de fin', blank=True)),
            ],
            options={
            },
            bases=('dossiers.healthcare',),
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=150, verbose_name='Nom')),
                ('type', models.CharField(max_length=80)),
                ('services', models.ManyToManyField(to='ressources.Service')),
            ],
            options={
                'verbose_name': "Statut d'un \xe9tat",
                'verbose_name_plural': "Statuts d'un \xe9tat",
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TransportPrescriptionLog',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Cr\xe9ation')),
                ('choices', models.CharField(max_length=4096, null=True, blank=True)),
                ('patient', models.ForeignKey(verbose_name='Dossier patient', to='dossiers.PatientRecord')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.AddField(
            model_name='protectionstate',
            name='status',
            field=models.ForeignKey(verbose_name='Statut de protection', to='dossiers.ProtectionStatus'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='patientcontact',
            name='addresses',
            field=models.ManyToManyField(to='dossiers.PatientAddress', verbose_name='Adresses'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='patientcontact',
            name='health_center',
            field=models.ForeignKey(verbose_name="Centre d'assurance maladie", blank=True, to='ressources.HealthCenter', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='patientcontact',
            name='job',
            field=models.ForeignKey(related_name='job', default=None, blank=True, to='ressources.Job', null=True, verbose_name='Profession'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='patientcontact',
            name='management_code',
            field=models.ForeignKey(verbose_name='Code de gestion', blank=True, to='ressources.ManagementCode', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='patientcontact',
            name='parente',
            field=models.ForeignKey(default=None, blank=True, to='ressources.PatientRelatedLink', null=True, verbose_name='Lien avec le patient (Parent\xe9)'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='healthcare',
            name='author',
            field=models.ForeignKey(verbose_name='Auteur', blank=True, to=settings.AUTH_USER_MODEL, null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='healthcare',
            name='patient',
            field=models.ForeignKey(verbose_name='Dossier patient', to='dossiers.PatientRecord'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='filestate',
            name='patient',
            field=models.ForeignKey(verbose_name='Dossier patient', to='dossiers.PatientRecord'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='filestate',
            name='previous_state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.SET_NULL, verbose_name='Etat pr\xe9c\xe9dent', blank=True, to='dossiers.FileState', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='filestate',
            name='status',
            field=models.ForeignKey(verbose_name='Statut', to='dossiers.Status'),
            preserve_default=True,
        ),
    ]
